root@MarySrivalli:~# rm -rf *
root@MarySrivalli:~# ls
root@MarySrivalli:~# touch mary1
root@MarySrivalli:~# ls
mary1
root@MarySrivalli:~# vi mary1
root@MarySrivalli:~# cat mary1
Hi This is swathi i am working on Linux
root@MarySrivalli:~# vi mary1
root@MarySrivalli:~# vi mary1
root@MarySrivalli:~# cat mary1
Hi This is MarySrivalli I am working on  Linux
I am  B.tech Graduate
I am FRom JangareddyGudem

root@MarySrivalli:~# vi mary1
root@MarySrivalli:~# cat mary1
i This is MarySrivalli I am working on  Linux
I am  B.tech Graduate
I am FRom JangareddyGudemi
root@MarySrivalli:~# vi mary1
root@MarySrivalli:~# touch mary2
root@MarySrivalli:~# ls
mary1  mary2
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# cp mary1 mary2
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudemi
root@MarySrivalli:~# cat mary1

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudemi
root@MarySrivalli:~# mkdir dir1
root@MarySrivalli:~# ls -l
total 12
drwxr-xr-x 2 root root 4096 Aug 26 16:44 dir1
-rw-r--r-- 1 root root  102 Aug 26 16:31 mary1
-rw-r--r-- 1 root root  102 Aug 26 16:39 mary2
root@MarySrivalli:~# ls
dir1  mary1  mary2
root@MarySrivalli:~# tree
.
├── dir1
├── mary1
└── mary2

2 directories, 2 files
root@MarySrivalli:~# cp mary2 dir1
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── mary1
└── mary2

2 directories, 3 files
root@MarySrivalli:~# mkdir dir2 dir3
root@MarySrivalli:~# ls
dir1  dir2  dir3  mary1  mary2
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── dir2
├── dir3
├── mary1
└── mary2

4 directories, 3 files
root@MarySrivalli:~# vi -r dir1
root@MarySrivalli:~# cp -r dir2 dir3
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── dir2
├── dir3
│   └── dir2
├── mary1
└── mary2

5 directories, 3 files
root@MarySrivalli:~# cp dir1/mary2 dir2
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── dir2
│   └── mary2
├── dir3
│   └── dir2
├── mary1
└── mary2

5 directories, 4 files
root@MarySrivalli:~# du -sh mary2
4.0K    mary2
root@MarySrivalli:~# zip myfile.zip mary2
Command 'zip' not found, but can be installed with:
apt install zip
root@MarySrivalli:~# apt install zip
Reading package lists... Done
Building dependency tree... Done
Reading state information... Done
The following additional packages will be installed:
  unzip
The following NEW packages will be installed:
  unzip zip
0 upgraded, 2 newly installed, 0 to remove and 185 not upgraded.
Need to get 350 kB of archives.
After this operation, 933 kB of additional disk space will be used.
Do you want to continue? [Y/n] y
Get:1 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 unzip amd64 6.0-28ubuntu4.1 [174 kB]
Get:2 http://archive.ubuntu.com/ubuntu noble-updates/main amd64 zip amd64 3.0-13ubuntu0.2 [176 kB]
Fetched 350 kB in 1s (244 kB/s)
Selecting previously unselected package unzip.
(Reading database ... 40801 files and directories currently installed.)
Preparing to unpack .../unzip_6.0-28ubuntu4.1_amd64.deb ...
Unpacking unzip (6.0-28ubuntu4.1) ...
Selecting previously unselected package zip.
Preparing to unpack .../zip_3.0-13ubuntu0.2_amd64.deb ...
Unpacking zip (3.0-13ubuntu0.2) ...
Setting up unzip (6.0-28ubuntu4.1) ...
Setting up zip (3.0-13ubuntu0.2) ...
Processing triggers for man-db (2.12.0-4build2) ...
root@MarySrivalli:~# zip myfile.zip mary2
  adding: mary2 (deflated 13%)
root@MarySrivalli:~# du -sh mary2
4.0K    mary2
root@MarySrivalli:~# du -sh myfile.zip
4.0K    myfile.zip
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── dir2
│   └── mary2
├── dir3
│   └── dir2
├── mary1
├── mary2
└── myfile.zip

5 directories, 5 files
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# zip myfile2.zip mary2
  adding: mary2 (deflated 52%)
root@MarySrivalli:~# du -sh mary2
4.0K    mary2
root@MarySrivalli:~# myfile2.zip
myfile2.zip: command not found
root@MarySrivalli:~# du -sh mary2
4.0K    mary2
root@MarySrivalli:~# unzip myfile2.zip
Archive:  myfile2.zip
replace mary2? [y]es, [n]o, [A]ll, [N]one, [r]ename: r
new name: mary4
  inflating: mary4
root@MarySrivalli:~# tree
.
├── dir1
│   └── mary2
├── dir2
│   └── mary2
├── dir3
│   └── dir2
├── mary1
├── mary2
├── mary4
├── myfile.zip
└── myfile2.zip

5 directories, 7 files
root@MarySrivalli:~# cat mary4

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# du -sh mary4
4.0K    mary4
root@MarySrivalli:~# ls -l
total 32
drwxr-xr-x 2 root root 4096 Aug 26 16:46 dir1
drwxr-xr-x 2 root root 4096 Aug 26 17:02 dir2
drwxr-xr-x 3 root root 4096 Aug 26 16:54 dir3
-rw-r--r-- 1 root root  102 Aug 26 16:31 mary1
-rw-r--r-- 1 root root 1494 Aug 26 17:10 mary2
-rw-r--r-- 1 root root 1494 Aug 26 17:10 mary4
-rw-r--r-- 1 root root  249 Aug 26 17:06 myfile.zip
-rw-r--r-- 1 root root  877 Aug 26 17:10 myfile2.zip
root@MarySrivalli:~# tar -cvf tarmyfile1.tar mary4
mary4
root@MarySrivalli:~# ls
dir1  dir2  dir3  mary1  mary2  mary4  myfile.zip  myfile2.zip  tarmyfile1.tar
root@MarySrivalli:~# gzip tarmyfile1.tar
root@MarySrivalli:~# ls -l
total 36
drwxr-xr-x 2 root root 4096 Aug 26 16:46 dir1
drwxr-xr-x 2 root root 4096 Aug 26 17:02 dir2
drwxr-xr-x 3 root root 4096 Aug 26 16:54 dir3
-rw-r--r-- 1 root root  102 Aug 26 16:31 mary1
-rw-r--r-- 1 root root 1494 Aug 26 17:10 mary2
-rw-r--r-- 1 root root 1494 Aug 26 17:10 mary4
-rw-r--r-- 1 root root  249 Aug 26 17:06 myfile.zip
-rw-r--r-- 1 root root  877 Aug 26 17:10 myfile2.zip
-rw-r--r-- 1 root root  858 Aug 26 17:39 tarmyfile1.tar.gz
root@MarySrivalli:~# tar -xvf tarmyfile1.tar.gz
mary4
root@MarySrivalli:~# cat mary4

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
not stat '/var/run/motd.new': No such file or directory
ERROR: could not install new MOTD

This message is shown once a day. To disable it please create the
/root/.hushlogin file.
root@MarySrivalli:~#
root@MarySrivalli:~#
root@MarySrivalli:~# cd
root@MarySrivalli:~# ls
dir1  dir2  dir3  mary1  mary2  mary4  myfile.zip  myfile2.zip  tarmyfile1.tar.gz
root@MarySrivalli:~# rmdir -r dir1
rmdir: invalid option -- 'r'
Try 'rmdir --help' for more information.
root@MarySrivalli:~# rm -r dir1
root@MarySrivalli:~# cat mary1

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudemi
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# cat mary3
cat: mary3: No such file or directory
root@MarySrivalli:~# cat mary4

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# mv  mary4 mary5
root@MarySrivalli:~# cat mary4
cat: mary4: No such file or directory
root@MarySrivalli:~# cat mary5

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# mv mary5 mary2
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# tree
.
├── dir2
│   └── mary2
├── dir3
│   └── dir2
├── mary1
├── mary2
├── myfile.zip
├── myfile2.zip
└── tarmyfile1.tar.gz

4 directories, 6 files
root@MarySrivalli:~# cd dir2
root@MarySrivalli:~/dir2# mary2
mary2: command not found
root@MarySrivalli:~/dir2# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudemi
root@MarySrivalli:~/dir2# cat mary5
cat: mary5: No such file or directory
root@MarySrivalli:~/dir2# cat mary4
cat: mary4: No such file or directory
root@MarySrivalli:~/dir2# cd
root@MarySrivalli:~# mary5
mary5: command not found
root@MarySrivalli:~# mary4
mary4: command not found
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# head mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
root@MarySrivalli:~# tail mary2
    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# head -1


root@MarySrivalli:~#
root@MarySrivalli:~# head -1 mary2

root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# head -1 mary2

root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# vi mary4
root@MarySrivalli:~# CAT MARY3
Command 'CAT' not found, but can be installed with:
apt install cat-bat
root@MarySrivalli:~# cat mary3
cat: mary3: No such file or directory
root@MarySrivalli:~# cat mary5
cat: mary5: No such file or directory
root@MarySrivalli:~# whoami
root
root@MarySrivalli:~# head -1


root@MarySrivalli:~# head -1 mary2

root@MarySrivalli:~# tail -1 mary2
}
root@MarySrivalli:~# head -8 mary2 | tail6
Command 'tail6' not found, did you mean:
  command 'tail' from deb coreutils (9.4-2ubuntu2)
Try: apt install <deb name>
root@MarySrivalli:~# head -8 mary2 | tail 6
tail: cannot open '6' for reading: No such file or directory
root@MarySrivalli:~# head -8 mary2 | tail -6




I am  B.tech Graduate

root@MarySrivalli:~# sed -n '1p' mary2

root@MarySrivalli:~# sed -n '1,3p' mary2

i This is MarySrivalli I am working on  Linux

root@MarySrivalli:~# catmary2
catmary2: command not found
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# sed '1,20p' mary2


i This is MarySrivalli I am working on  Linux
i This is MarySrivalli I am working on  Linux








I am  B.tech Graduate
I am  B.tech Graduate


I am FRom JangareddyGudem
I am FRom JangareddyGudem
#include <iostream>
#include <iostream>
#include <string>
#include <string>
#include <vector>
#include <vector>


int main() {
int main() {
    // Example 1: Multiple statements on a single line
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;


    // Example 2: A very long string literal using concatenation
    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# cat mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# sed -n '1,20p' mary2

i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
root@MarySrivalli:~# sed -n '$p' mary2
}
root@MarySrivalli:~# sed -i '1d' mary2
root@MarySrivalli:~# cat mary2
i This is MarySrivalli I am working on  Linux




I am  B.tech Graduate

I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# sed -i '3,6d' mary2
root@MarySrivalli:~# cat mary2
i This is MarySrivalli I am working on  Linux


I am FRom JangareddyGudem
#include <iostream>
#include <string>
#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# sed -i '3,6d' mary2
root@MarySrivalli:~# cat mary2
i This is MarySrivalli I am working on  Linux

#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# cat mary2
i This is MarySrivalli I am working on  Linux

#include <vector>

int main() {
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# vi mary2
root@MarySrivalli:~# sed -i '1,5d' mary2
root@MarySrivalli:~# cat mary2
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
}
root@MarySrivalli:~# sed -i '$d' mary2
root@MarySrivalli:~# cat mary2
    // Example 1: Multiple statements on a single line
    int a = 10; int b = 20; int sum = a + b; std::cout << "Sum: " << sum << std::endl;

    // Example 2: A very long string literal using concatenation
    std::string veryLongString = "This is a very long string that spans across a significant portion of the line. "
                                 "It demonstrates how you can create extended string literals by simply placing "
                                 "them next to each other, and the C++ compiler will automatically concatenate them "
                                 "into a single, continuous string when compiling the code.";
    std::cout << veryLongString << std::endl;

    // Example 3: A long calculation or function call chain on one line
    double result = (((10.5 * 2.3) + (45.1 / 7.8) - std::sqrt(81.0)) * std::pow(2.0, 3.0)) / (std::log(100.0) + std::abs(-5.0));
    std::cout << "Complex calculation result: " << result << std::endl;

    // Example 4: A long declaration and initialization of a data structure
    std::vector<int> largeVectorInitialization = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30};
    std::cout << "First element of large vector: " << largeVectorInitialization[0] << std::endl;

    return 0;
root@MarySrivalli:~#  wc -l mary2
19 mary2
root@MarySrivalli:~# ls
dir2  dir3  mary1  mary2  mary4  myfile.zip  myfile2.zip  tarmyfile1.tar.gz
root@MarySrivalli:~# touch mynew
root@MarySrivalli:~# vi mynew
root@MarySrivalli:~# cat mynew
MARY
MaRy
maRY
mary
MARY
MARy
Mary
MARY
MaRy                                                                                                          maRY                                                                                                          mary                                                                                                          MARY                                                                                                          MARy
root@MarySrivalli:~# sed -i 's/MARY/Devops/g' mynew
root@MarySrivalli:~# cat mynew
Devops
MaRy
maRY
mary
Devops
MARy
Mary
Devops
MaRy                                                                                                          maRY                                                                                                          mary                                                                                                          Devops                                                                                                          MARy
root@MarySrivalli:~# sed -i 's/mary/AWS/g' mynew
root@MarySrivalli:~# cat mynew
Devops
MaRy
maRY
AWS
Devops
MARy
Mary
Devops
MaRy                                                                                                          maRY                                                                                                          AWS                                                                                                          Devops                                                                                                          MARy
root@MarySrivalli:~# sed -i 's/Mary/Linux/g' mynew
root@MarySrivalli:~# cat mynew
Devops
MaRy
maRY
AWS
Devops
MARy
Linux
Devops
MaRy                                                                                                          maRY                                                                                                          AWS                                                                                                          Devops                                                                                                          MARy
root@MarySrivalli:~# sed -i 's/MARy/Sunny/g' mynew
root@MarySrivalli:~# cat mynew
Devops
MaRy
maRY
AWS
Devops
Sunny
Linux
Devops
MaRy                                                                                                          maRY                                                                                                          AWS                                                                                                          Devops                                                                                                          Sunny
root@MarySrivalli:~#